spring:
  jpa:
    show-sql: true
    database: postgresql
    hibernate:
      ddl-auto: update

  mongodb:
    embedded:
      version: 4.0.21

  datasource:
    url: ${TEST_POSTGRESQL_URL}
    username: ${TEST_POSTGRESQL_USERNAME}
    password: ${TEST_POSTGRESQL_PASSWORD}
    driver-class-name: org.postgresql.Driver

  data:
    redis:
      host: ${TEST_REDIS_HOST}
      port: ${TEST_REDIS_PORT}
      password: ${TEST_REDIS_PASSWORD}
    elasticsearch:
      repositories:
        enabled: true
    properties:
      mail:
        smtp:
          auth: true
          timeout: 5000
          starttls:
            enable: true

    mongodb:
      host: ${TEST_MONGO_HOST}
      port: ${TEST_MONGO_PORT}
      username: ${TEST_MONGO_USERNAME}
      password: ${TEST_MONGO_PASSWORD}
      database: ${TEST_MONGO_DATABASE}
      authentication-database: ${TEST_MONGO_AUTH}
      uri: ${TEST_MONGO_URI}

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${TEST_GAMIL_USERNAME}
    password: ${TEST_GAMIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          timeout: 5000
          starttls:
            enable: true

  elasticsearch:
    username: ${TEST_ELASTICSEARCH_USER}
    password: ${TEST_ELASTICSEARCH_PASSWORD}
    uris: ${TEST_ELASTICSEARCH}
cloud:
  aws:
    credentials:
      instance-profile: false
      accessKey: ${TEST_AWS_ACCESS_KEY}
      secretKey: ${TEST_AWS_SECRET_KEY}

    s3:
      bucket: ${TEST_AWS_BUCKET_NAME}
      endpoint: ${TEST_AWS_END_POINT}

    region:
      static: us-east-1
      auto: false

file:
  cloudfront-path: ${TEST_FILE_PATH}

jwt:
  accessSecret: ${TEST_JWT_ACCESS_SECRET}
  refreshSecret: ${TEST_JWT_REFRESH_SECRET}
  accessTokenExpire: ${TEST_JWT_ACCESS_EXPIRE}
  refreshTokenExpire: ${TEST_JWT_REFRESH_EXPIRE}

school:
  api-url: ${TEST_SCHOOL_API_URL}
  api-key: ${TEST_SCHOOL_API_KEY}